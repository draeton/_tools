<?xml version="1.0" encoding="utf-8"?>
<project>
    
    <property name="apps.home" value="${env.APPS_HOME}"/>
    
    <property name="src.dir" value="${basedir}/src"/>
    <property name="build.dir" value="${basedir}/build"/>
    <property name="dist.dir" value="${basedir}/dist"/>
    <property name="docs.dir" value="${basedir}/docs"/>
    <property name="templates.dir" value="${basedir}/_templates"/>
    
    <property name="jslint4java.jar" value="${apps.home}/jslint4java/jslint4java-2.0.1.jar"/>
    <property name="docco.bat" value="${apps.home}/nodejs/docco.bat"/>
    <property name="yui-compressor.jar" value="${apps.home}/yuicompressor-2.4.7/build/yuicompressor-2.4.7.jar"/>
    <property name="yui-compressor-ant-task.jar" value="${apps.home}/yui-compressor-ant-task-0.5/bin/yui-compressor-ant-task-0.5.jar"/>
    
    
    <macrodef name="git">
        <attribute name="command"/>
        <attribute name="failonerror" default="true"/>
        <attribute name="dir" default=""/>
        <element name="args" optional="true"/>
        <sequential>
            <echo message="git @{command}"/>
            <exec executable="git" dir="@{dir}">
                <arg line="@{command}"/>
                <args/>
            </exec>
        </sequential>
    </macrodef>
    
    
    <target name="-load.properties" description="Set properties for this build">
        <echo>Set properties for this build</echo>
        
        <property file="build.properties"/>
        <property name="gh-pages.dir" value="../gh-pages/${repo}"/>
        <property name="version" value="${build.major}.${build.minor}.${build.number}"/>
        
        <input message="Please enter a commit message:" addproperty="commit.message"/>
    </target>
    
    
    <target name="-clean" depends="-load.properties" description="Make project directory structure">
        <echo>Make project directory structure</echo>
        
        <delete dir="${build.dir}"/>
        <delete dir="${docs.dir}"/>
        
        <mkdir dir="${build.dir}"/>
        <mkdir dir="${docs.dir}"/>
    </target>

    
    <!-- skipping for now... I need jshint4java!!! -->
    <target name="jslint" depends="-load.properties" description="JSHint check">
        <echo>JSLint check</echo>
        
        <taskdef name="jslint" classname="com.googlecode.jslint4java.ant.JSLintTask" classpath="${jslint4java.jar}" />
        
        <jslint options="undef,white">
            <formatter type="plain" />
            <formatter type="plain" destfile="${build.dir}/jslint.out" />
            <fileset dir="${src.dir}">
                <include name="*.js"/>
                <exclude name="lib"/>
            </fileset>
        </jslint>
	    <echo>Finished linting</echo>
    </target>
    
    
    <target name="-readme" depends="-load.properties" description="Updating version number in README">        
        <echo>Updating version number in README.md</echo>
        
        <delete file="README.md"/>
        <copy file="${templates.dir}/README.md" tofile="README.md"/>
        <replace file="README.md" token="@VERSION@" value="${version}"/>
    </target>
    
    
    <target name="-docco" depends="-init" description="Create docs using Docco">
        <echo>Create docs using Docco</echo>
        
        <pathconvert pathsep=" " property="docco.args" refid="src.js"/>
        <exec executable="${docco.bat}">
            <arg line="${docco.args}"/>
        </exec>
        <!-- clean up after docco -->
        <delete dir="-p"/>
    </target>
    
    
    <target name="-concat" depends="-init" description="Concatenation of JS and CSS">
        <echo>Concatenation of JS and CSS</echo>

        <concat destfile="${build.dir}/js/${repo}-${version}.js" force="no">
            <filelist refid="src.js"/>
        </concat>
        <concat destfile="${build.dir}/css/${repo}-${version}.css" force="no">
            <filelist refid="src.css"/>
        </concat>
    </target>
    
    
    <target name="-minify" depends="-concat" description="Invoke YUI compressor">
        <echo>Invoke YUI compressor</echo>
        
        <path id="task.classpath">
            <pathelement location="${yui-compressor.jar}"/>
            <pathelement location="${yui-compressor-ant-task.jar}"/>
        </path>
        <taskdef name="yui-compressor" classname="net.noha.tools.ant.yuicompressor.tasks.YuiCompressorTask">
            <classpath refid="task.classpath"/>
        </taskdef>
        
        <yui-compressor warn="false" charset="UTF-8" fromdir="${build.dir}" todir="${build.dir}">
           <include name="js/${repo}-${version}.js" />
           <include name="css/${repo}-${version}.css" />
        </yui-compressor>
    </target>
    
    
    <target name="-zip" depends="-init" description="Create a zip file for distribution">       
        <echo message="Create a zip file for distribution" />
        
        <zip destfile="${dist.dir}/${repo}-${version}.zip" basedir="${build.dir}" />
    </target>
    
    
    <target name="-commit" depends="-init" description="Commit new build to master git repo">
        <echo>Commit new build to master git repo</echo>
        
        <git command="add">
            <args><arg line="."/></args>
        </git>
        <git command="commit">
            <args><arg value="-am Build ${version} - ${commit.message}"/></args>
        </git>
        <git command="push">
            <args>
                <arg value="origin"/>
                <arg value="master"/>
            </args>
        </git>
    </target>
    
    
    <target name="-gh-pages" depends="-load.properties" description="Push new changes to gh-pages">
        <echo>Push new changes to gh-pages</echo>
        
        <echo>copy new index.md to gh-pages and update version number</echo>
        <delete file="${gh-pages.dir}/index.md"/>
        <copy file="${gh-pages.dir}/_templates/index.md" tofile="${gh-pages.dir}/index.md"/>
        <replace file="${gh-pages.dir}/index.md" token="@VERSION@" value="${version}"/>
        
        <echo>copy new dist to gh-pages dist</echo>
        <copy file="${dist.dir}/${repo}-${version}.zip" tofile="${gh-pages.dir}/dist/${repo}-${version}.zip"/>
        
        <echo>delete css and js, and copy new from build dir</echo>
        <delete dir="${gh-pages.dir}/css"/>
        <delete dir="${gh-pages.dir}/js"/>
        <mkdir dir="${gh-pages.dir}/css"/>
        <mkdir dir="${gh-pages.dir}/js"/>        
        <copy todir="${gh-pages.dir}/css">
            <fileset dir="${build.dir}/css" includes="*.*"/>
        </copy>
        <copy todir="${gh-pages.dir}/js">
            <fileset dir="${build.dir}/js" includes="*.*"/>
        </copy>
        
        <echo>delete docs, and copy new docs</echo>
        <delete dir="${gh-pages.dir}/docs"/>        
        <copy todir="${gh-pages.dir}/docs">
            <fileset dir="${docs.dir}" includes="**"/>
        </copy>
    </target>
    
    
    <target name="-gh-pages-commit" depends="-gh-pages" description="Commit new build to gh-pages git repo">
        <echo>Commit new build to gh-pages git repo</echo>
        
        <git command="add" dir="${gh-pages.dir}">
            <args><arg line="."/></args>
        </git>
        <git command="commit" dir="${gh-pages.dir}">
            <args><arg value="-am Build ${version} - ${commit.message}"/></args>
        </git>
        <git command="push" dir="${gh-pages.dir}">
            <args>
                <arg value="origin"/>
                <arg value="gh-pages"/>
            </args>
        </git>
    </target>

    
    <target name="increment" depends="-load.properties" description="Increment build number">
        <echo>Increment build number</echo>
        
        <propertyfile file="build.properties">
            <entry key="build.number" type="int" operation="+" default="0"/>
        </propertyfile>
    </target>
    
</project>